{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_services/presence.service.ts","./src/app/_models/userParams.ts","./src/app/_services/pagninationHelper.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl = environment.apiUrl;\n  validationErrors: string[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error() {\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400Error() {\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get500Error() {\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get401Error() {\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400ValidationError() {\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n      this.validationErrors = error;\n\n    })\n  }\n\n}\n","<ng-container>\n    <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button>\n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button>\n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button>\n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">Test 400 Validation Error</button>\n\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n</ng-container>\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() maxDate: Date;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-dark-blue',\n      dateInputFormat: 'MM/DD/YYYY'\n    }\n  }\n\n  writeValue(obj: any): void {\n  }\n  registerOnChange(fn: any): void {\n  }\n  registerOnTouched(fn: any): void {\n  }\n\n}\n","<div class=\"form-group\">\n    <input type=\"text\"\n           [class.isinvalid]='ngControl.touched && ngControl.invalid'\n           class=\"form-control\"\n           [formControl]='ngControl.control'\n           placeholder=\"{{label}}\"\n           bsDatepicker\n           [bsConfig]='bsConfig'\n           [maxDate]='maxDate'>\n    <div *ngIf=\"ngControl.control.errors?.required\"\n         class=\"invalid-feedback\">{{label}} is required</div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxGalleryThumbnailsComponent } from '@kolkov/ngx-gallery';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  maxDate: Date;\n  validationErrors: string[] = [];\n\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear()-18);\n  }\n\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      username: ['', Validators.required],\n      gender: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\n    })\n  }\n\n  matchValues(matchTo: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return control?.value === control?.parent?.controls[matchTo].value ? null : { isMatching: true }\n    }\n  }\n\n  register() {\n    this.accountService.register(this.registerForm.value).subscribe(response =>{\n      this.router.navigateByUrl('/members');\n      this.cancel();\n    }, error=>{\n      this.validationErrors = error;   \n    })\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","<form [formGroup]=\"registerForm\"\n      (ngSubmit)=\"registerForm.valid && register()\"\n      autocomplete=\"off\">\n        <h2 class=\"text-center text-primary\">Sign Up</h2>\n        <div class=\"form-group\">\n                <label class=\"control-label\"\n                       style=\"margin-right: 10px;\">I am a: </label>\n                <label class=\"radio-inline\">\n                        <input type=\"radio\"\n                               value='male'\n                               formControlName='gender'>Male</label><label class=\"radio-inline\">\n                        <input type=\"radio\"\n                               class=\"ml-3\"\n                               value='female'\n                               formControlName='gender'>Female</label>\n        </div>\n        <app-text-input [formControl]='registerForm.controls[\"username\"]'\n                        [label]='\"Username\"'></app-text-input>\n        <app-text-input [formControl]='registerForm.controls[\"knownAs\"]'\n                        [label]='\"Known As\"'></app-text-input>\n        <app-date-input [formControl]='registerForm.controls[\"dateOfBirth\"]'\n                        [label]='\"Date of Birth\"'\n                        [maxDate]='maxDate'></app-date-input>\n        <app-text-input [formControl]='registerForm.controls[\"city\"]'\n                        [label]='\"City\"'></app-text-input>\n        <app-text-input [formControl]='registerForm.controls[\"country\"]'\n                        [label]='\"Country\"'></app-text-input>\n        <app-text-input [formControl]='registerForm.controls[\"password\"]'\n                        [label]='\"Password\"'\n                        [type]='\"password\"'></app-text-input>\n        <app-text-input [formControl]='registerForm.controls[\"confirmPassword\"]'\n                        [label]='\"Confirm Password\"'\n                        [type]='\"password\"'></app-text-input>\n\n        <div class=\"row\"\n             *ngIf=\"validationErrors.length > 0\">\n                <ul class=\"text-danger\">\n                        <li *ngFor=\"let error of validationErrors\">\n                                {{error}}\n                        </li>\n                </ul>\n        </div>\n\n        <div class=\"form-group text-center\">\n                <button class=\"btn btn-success mr-2\"\n                        type=\"submit\"\n                        [disabled]='!registerForm.valid'>Register</button>\n                <button class=\"btn btn-default mr-2\"\n                        (click)=\"cancel()\"\n                        type=\"button\">Cancel</button>\n        </div>\n</form>\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_modules/message';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css']\r\n})\r\n\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm: NgForm;\r\n  @Input() messages: Message[];\r\n  @Input() username: string;\r\n  messageContent: string;\r\n\r\n  constructor(public messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessage() {\r\n    this.messageService.sendMessage(this.username, this.messageContent).then(() => {\r\n      this.messageForm.reset();\r\n    })\r\n  }\r\n}\r\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\n            No Messages yet. Say hi by using the message box below.\n        </div>\n\n        <ul #scrollMe\n            style=\"overflow: scroll; height: 500px;\"\n            [scrollTop]=\"scrollMe.scrollHeight\"\n            *ngIf=\"(messageService.messageThread$ | async).length > 0\"\n            class=\"chat\">\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\n                <div>\n                    <span class=\"chat-img float-right\">\n                        <img src=\"{{message.senderPhotoUrl || './assets/user.png'}}\"\n                             alt=\"{{message.senderUsername | titlecase}}\"\n                             class=\"rounded-circle\">\n                    </span>\n                    <div class=\"chat-body\">\n                        <div class=\"header\">\n                            <small class=\"text-muted\">\n                                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\n                                <span class=\"text-danger\"\n                                      *ngIf=\"!message.dateRead && message.senderUsername != username\">\n                                    (unread)\n                                </span>\n                                <span class=\"text-success\"\n                                      *ngIf=\"message.dateRead && message.senderUsername != username\">\n                                    (read {{message.dateRead | timeago}})\n                                </span>\n                            </small>\n                        </div>\n                        <p>{{message.content}}</p>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n\n    <div class=\"card-footer\">\n        <form #messageForm=\"ngForm\"\n              (ngSubmit)=\"sendMessage()\"\n              autocomplete=\"off\">\n            <div class=\"input-group\">\n                <input name=\"messageContent\"\n                       required\n                       [(ngModel)]=\"messageContent\"\n                       type=\"text\"\n                       class=\"form-control input-sm\"\n                       placeholder=\"Send Private Message\">\n                <div class=\"input-group-append\">\n                    <button [disabled]=\"!messageForm.valid\"\n                            class=\"btn btn-primary\"\n                            type=\"submit\">Send</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n  photos: Photo[];\n\n  constructor(private adminService: AdminService) { }\n\n  ngOnInit(): void {\n    this.getPhotosForApproval();\n  }\n\n  getPhotosForApproval() {\n    this.adminService.getPhotosForApproval().subscribe(photos => {\n      this.photos = photos;\n    })\n  }\n\n  approvePhoto(photoId: number) {\n    this.adminService.approvePhoto(photoId).subscribe(() => {\n      this.photos.splice(this.photos.findIndex(p => p.id === photoId), 1);\n    })\n  }\n\n  rejectPhoto(photoId: number) {\n    this.adminService.rejectPhoto(photoId).subscribe(() => {\n      this.photos.splice(this.photos.findIndex(p => p.id === photoId), 1);\n    })\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-sm-3\"\n         *ngFor=\"let photo of photos\">\n        <h4>{{photo.username}}</h4>\n        <img src=\"{{photo.url}}\"\n             class=\"img-thumbnail p-1\"\n             alt=\"{{photo.username}}\">\n\n        <div class=\"text-center\">\n            <button class=\"btn btn-sm btn-success\"\n                    (click)='approvePhoto(photo.id)'>Approve</button>\n            <button class=\"btn btn-sm btn-success\"\n                    (click)='rejectPhoto(photo.id)'>Reject</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1>Not found</h1>\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Home</button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { PresenceService } from './presence.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n\n  constructor(private http: HttpClient, private presence: PresenceService) { }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\n      map((user: User) => {\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n        return user;\n      })\n    )\n  }\n\n  setCurrentUser(user: User) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.presence.stopHubConnection();\n  }\n\n  getDecodedToken(token) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Internal Server Error</h2>\n<h4>Refreshing the page will make the error disappear</h4>\n<ng-container *ngIf=\"error\">\n    <h5 class=\"text-danger\">Error: {{error.message}}</h5>\n    <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\n    <p>What to do?</p>\n    <ol>\n        <li>Open the console</li>\n        <li>Inspect the network tab</li>\n        <li>Look for failing request (red)</li>\n        <li>Examine request URL</li>\n        <li>Reproduce the error in Postman - if same in Postman - Angular is not the problem</li>\n    </ol>\n    <p>Following is the stack trace:</p>\n    <code class=\"mt-5 mb-10\" >{{error.details}}</code>\n</ng-container>","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]'\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole: string[];\n  user: User;\n\n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>, private accountService: AccountService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n    })\n  }\n  ngOnInit(): void {\n    if(!this.user?.roles || this.user == null){\n      this.viewContainerRef.clear();\n      return;\n    }\n\n    if(this.user?.roles.some(r => this.appHasRole.includes(r))){\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else{\n      this.viewContainerRef.clear();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) { }\n\n  busy(){\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-party',\n      bdColor: 'rgba(255,255,255,0)',\n      color: '#333333'\n    });\n  }\n\n  idle(){\n    this.busyRequestCount--;\n    if(this.busyRequestCount <= 0){\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor() { }\n\n  ngOnInit(): void { \n  }\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(event: boolean){\n    this.registerMode = event;\n  }\n}\n","<div class=\"container mt-5\">\n    <div *ngIf=\"!registerMode\" style=\"text-align: center;\">\n        <h1>Find Your Match</h1>\n        <p class=\"lead\">Come on in and view your matches. All you need to do is register.</p>\n        <div class=\"text-center\">\n            <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-large mr-2\">Register</button>\n            <button class=\"btn btn-info btn-large\">Learn More</button>\n        </div>\n    </div>\n\n    <div *ngIf=\"registerMode\" class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-4\">\n                <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n            </div>\n        </div>\n    </div>\n</div>","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    result: T;\r\n    pagination: Pagination;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',\n  hubUrl: 'https://localhost:5001/hubs/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\n    if(currentUser){\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      })\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { Message } from '../_modules/message';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\nimport { MessageService } from '../_services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n  messages: Message[];\r\n  pagination: Pagination;\r\n  container = 'Unread';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  loading = false;\r\n\r\n  constructor(private messageService: MessageService, private confimService: ConfirmService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages() {\r\n    this.loading = true;\r\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe(response => {\r\n      this.messages = response.result;\r\n      this.pagination = response.pagination;\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    this.confimService.confirm('Confirm Message Deletion', 'This cannot be undone', 'Delete', 'Cancel').subscribe(result => {\r\n      if (result) {\r\n        this.messageService.deleteMessage(id).subscribe(() => {\r\n          this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    if (this.pageNumber !== event.page) {\r\n      this.pageNumber = event.page;\r\n      this.loadMessages();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row mb-4\">\n    <div class=\"btn-group\"\n         name=\"container\">\n        <button class=\"btn btn-primary\"\n                btnRadio='Unread'\n                [(ngModel)]=\"container\"\n                (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope\"></i> Unread\n        </button><button class=\"btn btn-primary\"\n                btnRadio='Inbox'\n                [(ngModel)]=\"container\"\n                (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope-open\"></i> Inbox\n        </button><button class=\"btn btn-primary\"\n                btnRadio='Outbox'\n                [(ngModel)]=\"container\"\n                (click)=\"loadMessages()\">\n            <i class=\"fa fa-paper-plane\"></i> Outbox\n        </button>\n    </div>\n</div>\n\n<div class=\"row\"\n     *ngIf=\"messages?.length === 0\">\n    <h3>No Messages</h3>\n</div>\n\n<div class=\"row\"\n     *ngIf=\"messages?.length > 0\">\n    <table class=\"table table-hover\"\n           style=\"cursor: pointer;\">\n        <tr>\n            <th style=\"width: 40%\">Message</th>\n            <th style=\"width: 20%\">From / To</th>\n            <th style=\"width: 20%\">Sent / Received</th>\n            <th style=\"width: 20%\"></th>\n        </tr>\n        <tr [hidden]=\"loading\"\n            *ngFor=\"let message of messages\"\n            routerLink='{{container === \"Outbox\" \n            ? \"/members/\" + message.recipientUsername \n            : \"/members/\" + message.senderUsername}}'\n            [queryParams]=\"{tab: 3}\">\n            <td>{{message.content}}</td>\n            <td>\n                <div *ngIf=\"container === 'Outbox'\">\n                    <img class=\"img-circle rounded-circle mr-2\"\n                         src=\"{{message.recipientPhotoUrl || './assets/user.png'}}\"\n                         alt=\"{{message.recipientUsername}} photo\">\n                    <strong>{{message.recipientUsername | titlecase}}</strong>\n                </div>\n                <div *ngIf=\"container !== 'Outbox'\">\n                    <img class=\"img-circle rounded-circle mr-2\"\n                         src=\"{{message.senderPhotoUrl || './assets/user.png'}}\"\n                         alt=\"{{message.senderUsername}} photo\">\n                    <strong>{{message.senderUsername | titlecase}}</strong>\n                </div>\n            </td>\n            <td>{{message.messageSent | timeago}}</td>\n            <td>\n                <button (click)=\"$event.stopPropagation()\"\n                        (click)=\"deleteMessage(message.id)\"\n                        class=\"btn btn-danger\">Delete</button>\n            </td>\n        </tr>\n    </table>\n</div>\n\n<div class=\"d-flex justify-content-center\"\n     *ngIf=\"pagination && !loading && pagination.totalPages > 1\">\n    <pagination [boundaryLinks]=\"true\"\n                [totalItems]=\"pagination.totalItems\"\n                [itemsPerPage]=\"pagination.itemsPerPage\"\n                [(ngModel)]=\"pagination.currentPage\"\n                (pageChanged)=\"pageChanged($event)\"\n                previousText=\"&lsaquo;\"\n                nextText=\"&rsaquo;\"\n                firstText=\"&laquo;\"\n                lastText=\"&raquo;\">\n    </pagination>\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-right'\r\n    }),\r\n    TabsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    TimeagoModule.forRoot(),\r\n    ModalModule.forRoot()\r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    ToastrModule,\r\n    TabsModule,\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule,\r\n    PaginationModule,\r\n    ButtonsModule,\r\n    TimeagoModule,\r\n    ModalModule\r\n  ]\r\n\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key]);\n                  }\n                }\n                throw modalStateErrors.flat();\n              }\n              else if (typeof(error.error)=== 'object'){\n                this.toastr.error(error.statusText, error.status);\n              }\n              else {\n                this.toastr.error(error.error, error.status)\n              }\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = { state: { error: error.error } };\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected occurred');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService) { }\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\n          return true;\n        }\n        this.toastr.error(\"You cannot enter this area\");\n      })\n    )\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Photo } from '../_models/photo';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\nbaseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUsersWithRoles(){\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\n  }\n\n  updateUserRoles(username: string, roles: string[]) {\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\n  }\n\n  getPhotosForApproval(){\n    return this.http.get<Photo[]>(this.baseUrl + 'admin/photos-to-moderate');\n  }\n\n  approvePhoto(photoId: number){\n    return this.http.post(this.baseUrl + 'admin/approve-photo/' + photoId, {});\n  }\n\n  rejectPhoto(photoId: number){\n    return this.http.post(this.baseUrl + 'admin/reject-photo/' + photoId, {});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\nimport { AdminGuard } from 'src/app/_guards/admin.guard';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  users: Partial<User[]>\n  bsModalRef: BsModalRef;\n\n  constructor(private adminService: AdminService, private modalService: BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles() {\n    this.adminService.getUsersWithRoles().subscribe(users => {\n      this.users = users;\n    })\n  }\n\n  openRolesModal(user: User) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user)\n      }\n    };\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => {\n      const rolesToUpdate = {\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)]\n      };\n      if (rolesToUpdate) {\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\n          user.roles = [...rolesToUpdate.roles]\n        })\n      }\n    })\n  }\n\n  private getRolesArray(user) {\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      { name: 'Admin', value: 'Admin' },\n      { name: 'Moderator', value: 'Moderator' },\n      { name: 'Member', value: 'Member' },\n    ];\n\n    availableRoles.forEach(role => {\n      let isMatch = false;\n      for (const userRole of userRoles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n      if (!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    })\n    return roles;\n  }\n}\n\n","<div class=\"row\">\n    <table class=\"table\">\n        <tr>\n            <th style=\"width: 30%\">Username</th>\n            <th style=\"width: 30%\">Active Roles</th>\n            <th style=\"width: 30%\">Username</th>\n        </tr>\n        <tr *ngFor=\"let user of users\">\n            <td>{{user.username}}</td>\n            <td>{{user.roles}}</td>\n            <td><button (click)=\"openRolesModal(user)\"\n                        class=\"btn btn-info\">Edit Roles</button></td>\n        </tr>\n    </table>\n</div>","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\r\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { User } from 'src/app/_models/user';\r\nimport { Message } from 'src/app/_modules/message';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css']\r\n})\r\nexport class MemberDetailComponent implements OnInit, OnDestroy {\r\n  @ViewChild('memberTabs', { static: true }) memberTabs: TabsetComponent;\r\n  member: Member;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  activeTab: TabDirective;\r\n  messages: Message[] = [];\r\n  user: User;\r\n\r\n  constructor(public presence: PresenceService, private route: ActivatedRoute, private messageService: MessageService, private accountService: AccountService, private router: Router) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.member = data.member;\r\n    })\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      params.tab ? this.selectTab(params.tab) : this.selectTab(2);\r\n    })\r\n\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\r\n    ]\r\n\r\n    this.galleryImages = this.getImages();\r\n  }\r\n\r\n  getImages(): NgxGalleryImage[] {\r\n    const imageUrls = [];\r\n    this.member.photos.forEach(photo => {\r\n      imageUrls.push({\r\n        small: photo?.url,\r\n        medium: photo?.url,\r\n        big: photo?.url\r\n      })\r\n    });\r\n    return imageUrls;\r\n  }\r\n\r\n  loadMessages() {\r\n    this.messageService.getMessageThread(this.member.username).subscribe(messages => {\r\n      this.messages = messages;\r\n    })\r\n  }\r\n\r\n  selectTab(tabId: number) {\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n\r\n  onTabActivated(data: TabDirective) {\r\n    this.activeTab = data;\r\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0) {\r\n      this.messageService.createHubConnection(this.user, this.member.username);\r\n    } else {\r\n      this.messageService.stopHubConnection();\r\n    }\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.messageService.stopHubConnection();\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\"\r\n                 alt=\"{{member.knownAs}} main photo\"\r\n                 class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div class=\"mb-2\"\r\n                     *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\">\r\n                    <i class=\"fa fa-user-circle text-success\"></i> Online Now\r\n                </div>\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last Active:</strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member Since:</strong>\r\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\r\n                </div>\r\n                <div class=\"card-footer\">\r\n                    <div class=\"btn-group d-flex\">\r\n                        <button class=\"btn btn-primary\">Like</button>\r\n                        <button class=\"btn btn-success\"\r\n                                (click)=\"selectTab(3)\">Message</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\"\r\n                #memberTabs>\r\n            <tab heading=\"About {{member.knownAs}}\"\r\n                 (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Description</h4>\r\n                <p>{{member.introduction}}</p>\r\n                <h4>Looking for:</h4>\r\n                <p>{{member.lookingFor}}</p>\r\n            </tab>\r\n            <tab heading=\"Interests\"\r\n                 (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Interests</h4>\r\n                <p>{{member.interests}}</p>\r\n            </tab>\r\n            <tab heading=\"Photos\"\r\n                 (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Photos</h4>\r\n                <ngx-gallery [options]=\"galleryOptions\"\r\n                             [images]=\"galleryImages\"\r\n                             style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\r\n            </tab>\r\n            <tab heading=\"Messages\"\r\n                 (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Messages</h4>\r\n                <app-member-messages [username]=\"member.username\"></app-member-messages>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService){}\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user =>{\n        if(user) return true;\n        this.toastr.error('You are not authorized');\n      })\n    )\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Group } from '../_models/group';\nimport { User } from '../_models/user';\nimport { Message } from '../_modules/message';\nimport { getPaginatedResult, getPaginationHeaders } from './pagninationHelper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  baseUrl = environment.apiUrl;\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\n  messageThread$ = this.messageThreadSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  createHubConnection(user: User, otherUsername: string) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection.start().catch(error => console.log(error));\n\n    this.hubConnection.on('ReceiveMessageThread', messages => {\n      this.messageThreadSource.next(messages);\n    })\n\n    this.hubConnection.on('NewMessage', message => {\n      this.messageThread$.pipe(take(1)).subscribe(messages => {\n        this.messageThreadSource.next([...messages, message])\n      })\n    })\n\n    this.hubConnection.on('UpdatedGroup', (group: Group) =>{\n      if(group.connections.some(x => x.username == otherUsername)){\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\n          messages.forEach(message => {\n            if(!message.dateRead){\n              message.dateRead = new Date(Date.now())\n            }\n          })\n          this.messageThreadSource.next([...messages]);\n        })\n      }\n    })\n  }\n\n  stopHubConnection() {\n    if (this.hubConnection) {\n      this.hubConnection.stop();\n    }\n  }\n\n  getMessages(pageNumber, pageSize, container) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('Container', container);\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\n  }\n\n  getMessageThread(username: string) {\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\n  }\n\n  async sendMessage(username: string, content: string) {\n    return this.hubConnection.invoke('SendMessage', { recipientUsername: username, content })\n    .catch(error => console.log(error));\n  }\n\n  deleteMessage(id: number) {\n    return this.http.delete(this.baseUrl + 'messages/' + id);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/user';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  members: Member[];\n  pagination: Pagination;\n  userParams: UserParams;\n  user: User;\n  genderList = [{ value: \"male\", display: \"Males\" }, { value: \"female\", display: \"Females\" }];\n\n  constructor(private memberService: MembersService) {\n    this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n\n  loadMembers() {\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  resetFilters() {\n    this.userParams = this.memberService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any) {\n    this.userParams.pageNumber = event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n}\n","<div class=\"text-center mt-3\">\n    <h2>Your Matches - {{pagination?.totalItems}} Found</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <form #form=\"ngForm\"\n          class=\"form-inline mb-3\"\n          (ngSubmit)=\"loadMembers()\"\n          autocomplete=\"off\">\n        <div class=\"form-group\">\n            <label>Age from:</label>\n            <input type=\"number\"\n                   class=\"form-control ml-1\"\n                   style=\"width: 70px;\"\n                   name=\"minAge\"\n                   [(ngModel)]=\"userParams.minAge\">\n        </div>\n\n        <div class=\"form-group px-2\">\n            <label>to:</label>\n            <input type=\"number\"\n                   class=\"form-control ml-1\"\n                   style=\"width: 70px;\"\n                   name=\"maxAge\"\n                   [(ngModel)]=\"userParams.maxAge\">\n        </div>\n\n        <div class=\"form-group px-2\">\n            <label>Show: </label>\n            <div *ngFor=\"let gender of genderList\"\n                 class=\"px-2\">\n                <label for=\"gender.value\"\n                       class=\"ml-1 mr-2\">{{gender.display}}\n                    <input id=\"gender.value\"\n                           type=\"radio\"\n                           [value]=\"gender.value\"\n                           class=\"ml-1\"\n                           [(ngModel)]=\"userParams.gender\"\n                           name=\"gender\">\n                </label>\n            </div>\n        </div>\n\n\n        <!-- \n        <div class=\"form-group px-2\">\n            <label>Show: </label>\n            <select class=\"form-control ml-1\"\n                    name=\"gender\"\n                    style=\"width: 130px;\"\n                    [(ngModel)]=\"userParams.gender\">\n                <option *ngFor=\"let gender of genderList\"\n                        [value]=\"gender.value\">\n                    {{gender.display}}\n                </option>\n            </select>\n        </div> -->\n\n        <button class=\"btn btn-primary ml-1\"\n                type=\"submit\">Apply Filters</button>\n        <button (click)=\"resetFilters()\"\n                class=\"btn btn-info ml-1\"\n                type=\"submit\">Reset Filters</button>\n        <div class=\"col\">\n            <div class=\"btn-group float-right\">\n                <button type=\"button\"\n                        class=\"btn btn-primary\"\n                        name='orderBy'\n                        (click)=\"loadMembers()\"\n                        btnRadio='lastActive'\n                        [(ngModel)]=\"userParams.orderBy\">Last Active</button>\n\n                <button type=\"button\"\n                        class=\"btn btn-primary\"\n                        name='orderBy'\n                        (click)=\"loadMembers()\"\n                        btnRadio='created'\n                        [(ngModel)]=\"userParams.orderBy\">Newest Members</button>\n            </div>\n        </div>\n    </form>\n</div>\n\n<div class=\"row\">\n    <div *ngFor=\"let member of members\"\n         class=\"col-2\">\n        <app-member-card [member]=\"member\"></app-member-card>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center\"\n     *ngIf=\"pagination && pagination.totalPages > 1\">\n    <pagination [boundaryLinks]=\"true\"\n                [totalItems]=\"pagination.totalItems\"\n                [itemsPerPage]=\"pagination.itemsPerPage\"\n                [(ngModel)]=\"pagination.currentPage\"\n                (pageChanged)=\"pageChanged($event)\"\n                previousText=\"&lsaquo;\"\n                nextText=\"&rsaquo;\"\n                firstText=\"&laquo;\"\n                lastText=\"&raquo;\">\n    </pagination>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'The Dating App';\n  users: any;\n  constructor(private accountService: AccountService, private presence: PresenceService) {\n  }\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      this.accountService.setCurrentUser(user);\n      this.presence.createHubConnection(user);\n    }\n  }\n\n}\n","<ngx-spinner>\r\n    <h3>Loading...</h3>\r\n</ngx-spinner>\r\n<app-nav></app-nav>\r\n<div class=\"container\" style=\"margin-top: 5rem\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../_services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyService: BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      delay(1000),\n      finalize(() => {\n        this.busyService.idle();\n      })\n    )\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of, pipe } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Member } from '../_models/member';\nimport { PaginatedResult } from '../_models/pagination';\nimport { User } from '../_models/user';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { getPaginatedResult, getPaginationHeaders } from './pagninationHelper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members: Member[] = [];\n  memberCache = new Map();\n  user: User;\n  userParams: UserParams;\n\n  constructor(private http: HttpClient, private accountService: AccountService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n    })\n  }\n\n  getUserParams() {\n    return this.userParams;\n  }\n\n  setUserParams(params: UserParams) {\n    this.userParams = params;\n  }\n\n  resetUserParams() {\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n\n  getMembers(userParams: UserParams) {\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\n    if (response) {\n      return of(response);\n    }\n\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\n\n    params = params.append(\"minAge\", userParams.minAge.toString());\n    params = params.append('maxAge', userParams.maxAge.toString());\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http)\n      .pipe(map(response => {\n        this.memberCache.set(Object.values(userParams).join('-'), response);\n        return response;\n      }))\n  }\n\n  getMember(username: string) {\n    const member = [...this.memberCache.values()]\n      .reduce((arr, elem) => arr.concat(elem.result), [])\n      .find((member: Member) => member.username === username);\n    if (member) {\n      return of(member);\n    }\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\n  }\n\n  updateMember(member: Member) {\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      })\n    );\n  }\n\n  setMainPhoto(photoId: number) {\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\n  }\n\n  deletePhoto(photoId: number) {\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\n  }\n\n  addLike(username: string) {\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\n  }\n\n  getLikes(predicate: string, pageNumber: number, pageSize: number) {\n    let params = getPaginationHeaders(pageNumber, pageSize)\n    params = params.append('predicate', predicate);\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    MemberDetailComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    TestErrorsComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    TextInputComponent,\r\n    DateInputComponent,\r\n    MemberMessagesComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RolesModalComponent,\r\n    ConfirmDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Photo } from 'src/app/_models/photo';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member: Member;\n  uploader: FileUploader;\n  hasBaseDropzoneOver = false;\n  baseUrl = environment.apiUrl;\n  user: User;\n\n  constructor(private accountService: AccountService, private memberService: MembersService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any) {\n    this.hasBaseDropzoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    }\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const photo: Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n        if(photo.isMain){\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    }\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach(p => {\n        if (p.isMain) p.isMain = false;\n        if (p.id === photo.id) p.isMain = true;\n      })\n    })\n  }\n\n  deletePhoto(photoId: number) {\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n      this.member.photos = this.member.photos.filter(x => x.id !== photoId);\n    })\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-3\"\n         *ngFor=\"let photo of member.photos\">\n        <img src=\"{{photo.url}}\"\n             alt=\"{{photo.url}}\"\n             class=\"img-thumbnail p-1\"\n             [class.not-approved]=\"!photo.isApproved\">\n        <div class=\"text-center img-text\"\n             *ngIf=\"!photo.isApproved\">\n            <span class=\"text-danger\">Awaiting Approval</span>\n        </div>\n        <div class=\"text-center\">\n            <button [disabled]=\"photo.isMain || !photo.isApproved\"\n                    (click)=\"setMainPhoto(photo)\"\n                    [ngClass]='photo.isMain || !photo.isApproved ? \"btn-outline-success active\" : \"btn-success\"'\n                    class=\"btn btn-sm btn-success m-1\">Main</button>\n            <button [disabled]=\"photo.isMain\"\n                    (click)=\"deletePhoto(photo.id)\"\n                    class=\"btn btn-sm btn-primary m-1\"><i class=\"fa fa-trash\"></i></button>\n        </div>\n    </div>\n</div>\n<div class=\"row mt-3\">\n\n    <div class=\"col-md-3\">\n\n        <h3>Add Photos</h3>\n\n        <div ng2FileDrop\n             [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\"\n             (fileOver)=\"fileOverBase($event)\"\n             [uploader]=\"uploader\"\n             class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n            <i class=\"fa fa-upload fa-3x\"></i>\n            Drag photo here\n        </div>\n\n        Multiple\n        <input type=\"file\"\n               ng2FileSelect\n               [uploader]=\"uploader\"\n               multiple /><br />\n\n        Single\n        <input type=\"file\"\n               ng2FileSelect\n               [uploader]=\"uploader\" />\n    </div>\n\n    <div class=\"col-md-9\"\n         *ngIf=\"uploader?.queue?.length\"\n         style=\"margin-bottom: 40px\">\n\n        <h3>Upload queue</h3>\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th width=\"50%\">Name</th>\n                    <th>Size</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of uploader.queue\">\n                    <td><strong>{{ item?.file?.name }}</strong></td>\n                    <td *ngIf=\"uploader.options.isHTML5\"\n                        nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div class=\"mr-3\">\n            <div>\n                Queue progress:\n                <div class=\"progress\"\n                     style=\"\">\n                    <div class=\"progress-bar\"\n                         role=\"progressbar\"\n                         [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                </div>\n            </div>\n            <button type=\"button\"\n                    class=\"btn btn-success btn-s mt-2 mr-2\"\n                    (click)=\"uploader.uploadAll()\"\n                    [disabled]=\"!uploader.getNotUploadedItems().length\">\n                <span class=\"fa fa-upload\"></span> Upload all\n            </button>\n            <button type=\"button\"\n                    class=\"btn btn-warning btn-s mt-2 mr-2\"\n                    (click)=\"uploader.cancelAll()\"\n                    [disabled]=\"!uploader.isUploading\">\n                <span class=\"fa fa-ban\"></span> Cancel all\n            </button>\n            <button type=\"button\"\n                    class=\"btn btn-primary btn-s mt-2 mr-2\"\n                    (click)=\"uploader.clearQueue()\"\n                    [disabled]=\"!uploader.queue.length\">\n                <span class=\"fa fa-trash\"></span> Remove all\n            </button>\n        </div>\n    </div>\n</div>","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\nimport { Observable } from 'rxjs';\nimport { Member } from \"../_models/member\";\nimport { MembersService } from \"../_services/members.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberDetailedResolver implements Resolve<Member>{\n\n  constructor(private memberService: MembersService) { }\n  \n  resolve(route: ActivatedRouteSnapshot): Observable<Member> {\n    return this.memberService.getMember(route.paramMap.get('username'));\n  }\n\n}","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n@Input() label: string;\n@Input() type = 'text';\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n   }\n\n  writeValue(obj: any): void {\n  }\n  registerOnChange(fn: any): void {\n  }\n  registerOnTouched(fn: any): void {\n  }\n\n\n}\n","<div class=\"form-group\">\n    <input [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n           type={{type}}\n           class=\"form-control\"\n           [formControl]=\"ngControl.control\"\n           placeholder={{label}}>\n    <div *ngIf=\"ngControl.control.errors?.required\"\n         class=\"invalid-feedback\">Please enter a {{label}}</div>\n    <div *ngIf=\"ngControl.control.errors?.minlength\"\n         class=\"invalid-feedback\">{{label}} must be at least\n        {{ngControl.control.errors.minlength['requiredLength']}} characters</div>\n    <div *ngIf=\"ngControl.control.errors?.maxlength\"\n         class=\"invalid-feedback\">{{label}} can be no more than\n        {{ngControl.control.errors.maxlength['requiredLength']}}characters</div>\n    <div *ngIf=\"ngControl.control.errors?.isMatching\"\n         class=\"invalid-feedback\">Passwords do not match</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  members: Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize = 5;\n  pagination: Pagination;\n\n  constructor(private memberService: MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes() {\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n\n}\n","<div class=\"tex-center mt-3\">\n    <h2>{{predicate === 'liked' ? 'Members I Like' : 'Members Who Like Me'}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"btn-group\"\n             name=\"predicate\">\n            <button class=\"btn btn-primary\"\n                    btnRadio=\"liked\"\n                    [(ngModel)]=\"predicate\"\n                    (click)=\"loadLikes()\">Members I Like</button>\n            <button class=\"btn btn-primary\"\n                    btnRadio=\"likedBy\"\n                    [(ngModel)]=\"predicate\"\n                    (click)=\"loadLikes()\">Members Who Like Me</button>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\">\n        <div class=\"col-2\"\n             *ngFor=\"let member of members\">\n            <app-member-card [member]=\"member\"></app-member-card>\n        </div>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center\"\n     *ngIf=\"pagination\">\n    <pagination [boundaryLinks]=\"true\"\n                [totalItems]=\"pagination.totalItems\"\n                [itemsPerPage]=\"pagination.itemsPerPage\"\n                [(ngModel)]=\"pagination.currentPage\"\n                (pageChanged)=\"pageChanged($event)\"\n                previousText=\"&lsaquo;\"\n                nextText=\"&rsaquo;\"\n                firstText=\"&laquo;\"\n                lastText=\"&raquo;\">\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActiveToast, ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {}\n\n  constructor(\n    public accountService: AccountService, \n    private router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    this.accountService.login(this.model).subscribe(response => {\n      this.router.navigateByUrl('/members');\n    })\n  }\n\n  logout(){\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n    <div class=\"container\">\r\n        <a class=\"navbar-brand\"\r\n           routerLink='/'>Dating App</a>\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <ng-container *ngIf=\"accountService.currentUser$ | async\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\"\r\n                       routerLink='/members'\r\n                       routerLinkActive='active'>Matches</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\"\r\n                       routerLink='/lists'\r\n                       routerLinkActive='active'>Lists</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\"\r\n                       routerLink='/messages'\r\n                       routerLinkActive='active'>Messages</a>\r\n                </li>\r\n                <li *appHasRole='[\"Admin\", \"Moderator\"]' class=\"nav-item\">\r\n                    <a class=\"nav-link\"\r\n                       routerLink='/admin'\r\n                       routerLinkActive='active'>Admin</a>\r\n                </li>\r\n            </ng-container>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\"\r\n                   routerLink='/errors'\r\n                   routerLinkActive='active'>Errors</a>\r\n            </li>\r\n\r\n        </ul>\r\n\r\n        <div class=\"dropdown\"\r\n             *ngIf=\"(accountService.currentUser$ | async) as user\"\r\n             dropdown>\r\n            <img src=\"{{user.photoUrl || './assets/user.png'}}\"\r\n                 alt=\"{{user.username}}\"\r\n                 class=\"mr-2\">\r\n            <a class=\"dropdown-toggle text-light\"\r\n               dropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\r\n            <div class=\"dropdown-menu mt-3\"\r\n                 *dropdownMenu>\r\n                <a class=\"dropdown-item\"\r\n                   routerLink='/member/edit'>Edit Profile</a>\r\n                <div class=\"dropdown-divider\"></div>\r\n                <a class=\"dropdown-item\"\r\n                   (click)=\"logout()\">Logout</a>\r\n            </div>\r\n        </div>\r\n\r\n        <form *ngIf=\"(accountService.currentUser$ | async) === null\"\r\n              #loginForm=\"ngForm\"\r\n              class=\"form-inline mt-2 mt-md-0\"\r\n              (ngSubmit)=\"login()\"\r\n              autocomplete=\"off\">\r\n            <input name=\"username\"\r\n                   [(ngModel)]=\"model.username\"\r\n                   class=\"form-control mr-sm-2\"\r\n                   type=\"text\"\r\n                   placeholder=\"Username\">\r\n            <input name=\"password\"\r\n                   [(ngModel)]=\"model.password\"\r\n                   class=\"form-control mr-sm-2\"\r\n                   type=\"password\"\r\n                   placeholder=\"Password\">\r\n            <button class=\"btn btn-outline-success my-2 my-sm-0\"\r\n                    type=\"submit\">Login</button>\r\n\r\n        </form>\r\n    </div>\r\n</nav>","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member: Member;\n\n  constructor(private memberService: MembersService, private toastr: ToastrService, public presence: PresenceService) { }\n\n  ngOnInit(): void {\n  }\n\n  addLike(member:Member){\n    this.memberService.addLike(member.username).subscribe(() =>{\n      this.toastr.success('You have liked ' + member.knownAs);\n    })\n  }\n\n}\n","<div class=\"card mb-4\">\n    <div class=\"card-img-wrapper\">\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\"\n             alt=\"{{member.knownAs}} main picture\"\n             class=\"card-img-top\">\n        <ul class=\"list-inline member-icons animate text-center\">\n            <li class=\"list-inline-item\">\n                <button routerLink='/members/{{member.username}}'\n                        class=\"btn btn-primary\"><i class=\"fa fa-user\"></i></button>\n            </li>\n            <li class=\"list-inline-item\">\n                <button (click)=\"addLike(member)\"\n                        class=\"btn btn-primary\"><i class=\"fa fa-heart\"></i></button>\n            </li>\n            <li class=\"list-inline-item\">\n                <button routerLink='/members/{{member.username}}'\n                        [queryParams]=\"{tab: 3}\"\n                        class=\"btn btn-primary\">\n                    <i class=\"fa fa-envelope\"></i></button>\n            </li>\n\n        </ul>\n    </div>\n    <div class=\"card-body p-1\">\n        <h6 class=\"card-title text-center mb-1\">\n            <span [class.is-online]=\"(presence.onlineUsers$ | async).includes(member.username)\">\n                <i class=\"fa fa-user mr-2\"></i>\n            </span>\n            {{member.knownAs}} ({{member.age}})\n        </h6>\n        <p class=\"card-text text-muted text-center\">\n            {{member.city}}\n        </p>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { Toast, ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) { }\n\n  createHubConnection(user: User) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection\n      .start()\n      .catch(error => console.log(error));\n\n    this.hubConnection.on('UserIsOnline', username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames, username])\n      })\n    })\n\n    this.hubConnection.on('UserIsOffline', username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames.filter(x => x !== username)])\n      })\n    })\n\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    })\n\n    this.hubConnection.on('NewMessageReceived', ({ username, knownAs }) => {\n      this.toastr.info(\"New message from \" + knownAs)\n        .onTap\n        .pipe(take(1))\n        .subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=3'));\n    })\n  }\n\n  stopHubConnection() {\n    this.hubConnection.stop().catch(error => console.log(error));\n  }\n}\n","import { User } from \"./user\";\r\n\r\nexport class UserParams {\r\n    gender: string;\r\n    minAge = 18;\r\n    maxAge = 99;\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    orderBy = 'lastActive';\r\n\r\n    constructor(user: User) {\r\n        this.gender = user.gender === \"female\" ? \"male\" : \"female\";\r\n    }\r\n}","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { PaginatedResult } from \"../_models/pagination\";\r\n\r\nexport function getPaginatedResult<T>(url, params, http: HttpClient) {\r\n    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n\r\n    return http.get<T>(url, { observe: 'response', params }).pipe(\r\n        map(response => {\r\n            paginatedResult.result = response.body;\r\n            if (response.headers.get('Pagination') !== null) {\r\n                paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n            }\r\n            return paginatedResult;\r\n        })\r\n    );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n    let params = new HttpParams();\r\n    params = params.append('pageNumber', pageNumber.toString());\r\n    params = params.append('pageSize', pageSize.toString());\r\n    return params;\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Admin Panel</h2>\n<div class=\"tab-panel\">\n    <tabset class=\"member-tabset\">\n        <tab heading='User Management'\n             *appHasRole='[\"Admin\"]'>\n            <div class=\"container\">\n                <app-user-management></app-user-management>\n            </div>\n        </tab>\n        <tab heading='Photo Management'\n             *appHasRole='[\"Admin\", \"Moderator\"]'>\n            <div class=\"container\">\n                <app-photo-management></app-photo-management>\n            </div>\n        </tab>\n    </tabset>\n</div>","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  member: Member;\n  user: User;\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(private accountService: AccountService, private memberService: MembersService, private toastr: ToastrService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember() {\n    this.memberService.getMember(this.user.username).subscribe(member => {\n      this.member = member;\n    })\n  }\n\n  updateMember() {\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.toastr.success('Profile updated successfully');\n      this.editForm.reset(this.member);\n    })\n  }\n}\n","<div class=\"row\"\r\n     *ngIf=\"member\">\r\n    <div class=\"col-4\">\r\n        <h1>Your Profile</h1>\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <div class=\"alert alert-info\"\r\n             *ngIf=\"editForm.dirty\">\r\n            <strong>Information: </strong>There are unsaved changes to your profile.\r\n        </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\"\r\n                 alt=\"{{member.knownAs}} main photo\"\r\n                 class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last Active:</strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member Since:</strong>\r\n                    <p>{{member.created | date: \"dd MMM yyyy\"}}</p>\r\n                </div>\r\n                <div class=\"card-footer\">\r\n                    <button [disabled]=\"!editForm.dirty\"\r\n                            form=\"editForm\"\r\n                            class=\"btn btn-success btn-block\">Save Changes</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\">\r\n            <tab heading=\"About {{member.knownAs}}\">\r\n                <form #editForm=\"ngForm\"\r\n                      (ngSubmit)=\"updateMember()\"\r\n                      id=\"editForm\">\r\n                    <h4>Description</h4>\r\n                    <textarea class=\"form-control\"\r\n                              [(ngModel)]=\"member.introduction\"\r\n                              name=\"introduction\"\r\n                              rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Looking for:</h4>\r\n                    <textarea class=\"form-control\"\r\n                              [(ngModel)]=\"member.lookingFor\"\r\n                              name=\"lookingFor\"\r\n                              rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Interests:</h4>\r\n                    <textarea class=\"form-control\"\r\n                              [(ngModel)]=\"member.interests\"\r\n                              name=\"interests\"\r\n                              rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Location Details:</h4>\r\n                    <div class=\"form-inline\">\r\n                        <label for=\"city\">City: </label>\r\n                        <input [(ngModel)]=\"member.city\"\r\n                               type=\"text\"\r\n                               name=\"city\"\r\n                               class=\"form-control mx-2\">\r\n                        <label for=\"country\">Country: </label>\r\n                        <input [(ngModel)]=\"member.country\"\r\n                               type=\"text\"\r\n                               name=\"country\"\r\n                               class=\"form-control mx-2\">\r\n                    </div>\r\n                </form>\r\n            </tab>\r\n            <tab heading=\"Edit Photos\">\r\n                <app-photo-editor [member]=\"member\"></app-photo-editor>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n\n  constructor(private confirmService: ConfirmService) { }\n\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\n    if (component.editForm.dirty) {\n      return this.confirmService.confirm();\n    }\n    return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: boolean;\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\n</div>\n<div class=\"modal-body\">\n    <p>{{message}}</p>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\"\n            class=\"btn btn-danger\"\n            (click)=\"decline()\">{{btnCancelText}}</button>\n    <button type=\"button\"\n            class=\"btn btn-success\"\n            (click)=\"confirm()\">{{btnOkText}}</button>\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'members', component: MemberListComponent },\r\n      { path: 'members/:username', component: MemberDetailComponent, resolve: { member: MemberDetailedResolver } },\r\n      { path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard] },\r\n      { path: 'lists', component: ListsComponent },\r\n      { path: 'messages', component: MessagesComponent },\r\n      { path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard] }\r\n    ]\r\n  },\r\n  { path: 'errors', component: TestErrorsComponent },\r\n  { path: 'not-found', component: NotFoundComponent },\r\n  { path: 'server-error', component: ServerErrorComponent },\r\n  { path: '**', component: NotFoundComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\n  bsModalRef: BsModalRef;\n\n  constructor(private modalService: BsModalService) { }\n\n  confirm(title = 'Confirmation', message = 'Are you sure?', btnOkText = 'OK', btnCancelText = 'Cancel'): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancelText\n      }\n    }\n    this.bsModalRef = this.modalService.show(ConfirmDialogComponent, config);\n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer) => {\n      const subscription = this.bsModalRef.onHidden.subscribe(() => {\n        observer.next(this.bsModalRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user: User;\n  roles: any[];\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n    this.updateRoles();\n  }\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit Roles for {{user.username}}</h4>\n    <button type=\"button\"\n            class=\"close pull-right\"\n            aria-label=\"Close\"\n            (click)=\"bsModalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <form #rolesForm=\"ngForm\"\n          id=\"rolesForm\">\n        <div class=\"form-check\"\n             *ngFor=\"let role of roles\">\n            <input type=\"checkbox\"\n                   class=\"form-check-input\"\n                   [checked]=\"role.checked\"\n                   value=\"role.name\"\n                   (change)=\"role.checked= !role.checked\"\n                   [disabled]=\"role.name === 'Admin' && user.username === 'admin'\">\n            <label>{{role.name}}</label>\n        </div>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\"\n            class=\"btn btn-default\"\n            (click)=\"bsModalRef.hide()\">Cancel</button>\n    <button type=\"button\"\n            class=\"btn btn-outline-success\"\n            (click)=\"updateRoles()\">Save</button>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}